package com.webcon.sus.activities;


import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.webcon.sus.adapter.MyAlarmListAdapter;
import com.webcon.sus.demo.R;
import com.webcon.sus.entity.AlarmNode;
import com.webcon.sus.entity.StationNode;
import com.webcon.sus.eventObjects.MessageEvent;
import com.webcon.sus.utils.SUConstant;
import com.webcon.wp.utils.WPApplication;

import de.greenrobot.event.EventBus;

/**
 * 站场消息列表页面
 * @author m
 */
public class AlarmSecFragment extends Fragment {

    private Context mContext;
    private int mStationId = -1;
    private StationNode mStation;

    private ListView mAlarmListView;
    private MyAlarmListAdapter mAlarmAdapter;
    private LinearLayout linear_container;
    private TextView tv_empty;

    //------------------
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EventBus.getDefault().register(this);
        init(getArguments());
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View layout = inflater.inflate(R.layout.fragment_alarm_sec, container, false);
        //列表
        mAlarmListView = (ListView) layout.findViewById(R.id.list_alarms_sec);
        mAlarmListView.setOnItemClickListener(itemClickListener);
        //组件
        tv_empty = (TextView) layout.findViewById(R.id.tv_empty_sec);
        linear_container = (LinearLayout) layout.findViewById(R.id.linear_alarm_container_sec);
        refreshFragment();
        return layout;
    }

    private void init(Bundle bundle) {
        mContext = getActivity();
        if(bundle == null){
            errorQuit(3001);
        }else{
            mStationId = bundle.getInt(MainStationListFragment.KEY_ID, -1);
            mStation = WPApplication.getInstance().getStationNode(mStationId);
            if(mStationId == -1){
                errorQuit(3002);
                getActivity().finish();
            }
        }
    }

    private void errorQuit(int errorCode){
        Toast.makeText(mContext, "初始化失败: " + errorCode, Toast.LENGTH_SHORT).show();
        getActivity().finish();
    }

    private void refreshFragment() {
        Log.i("AlarmSec", "refreshFragment");
        if(mStation == null || mStation.getAlarmList() == null){
            return;
        }
        if (mAlarmAdapter == null) {
            mAlarmAdapter = new MyAlarmListAdapter(mContext, mStation.getAlarmList());
            mAlarmListView.setAdapter(mAlarmAdapter);
            checkAndRefresh(mStation.getAlarmList().size());
        } else {
            refreshAdapter();
        }
    }

    private void refreshAdapter() {
        if (mAlarmAdapter != null) {
            checkAndRefresh(mStation.getAlarmList().size());
            mAlarmAdapter.notifyDataSetChanged();
        }
    }

    private void checkAndRefresh(int size) {
        if (size > 0) {
            linear_container.setVisibility(View.VISIBLE);
            tv_empty.setVisibility(View.GONE);
        } else {
            linear_container.setVisibility(View.GONE);
            tv_empty.setVisibility(View.VISIBLE);
        }
    }

    /**
     * listView Item点击事件
     */
    AdapterView.OnItemClickListener itemClickListener = new AdapterView.OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {
            Bundle bundle = new Bundle();
            AlarmNode alarm = mStation.getAlarmList().get(position);
                /* 跳转标识 flag
                 * 0:程序未启动的情况下从登陆页面直接跳转
                 * 1:点击报警列表跳转
                 * 2:程序在启动状态下点击通知跳转 */
//            bundle.putInt(AlarmDetailsActivityCompat.ALARM_DETAIL_FLAG, 1);
            bundle.putInt(AlarmDetailsActivityCompat.ALARM_DETAIL_FLAG, SUConstant.APP_RUNNING_M);
            // 保留字段（推送的报警信息里会有，获取的默认填0）
            bundle.putInt(AlarmDetailsActivityCompat.ALARM_DETAIL_TEMP, 0);
            // 报警信息对象
            bundle.putSerializable(AlarmDetailsActivityCompat.ALARM_DETAIL_DATA, alarm);

            // 跳转到报警信息详细页面
            Intent intent = new Intent(mContext, AlarmDetailsActivityCompat.class);
            intent.putExtras(bundle);
            mContext.startActivity(intent);
        }
    };


    @Override
    public void onDestroy() {
        EventBus.getDefault().unregister(this);
        super.onDestroy();
    }


    @Override
    public void onPause() {
        super.onPause();
    }



    public void onEventMainThread(MessageEvent event){
        switch (event.getType()){
            case MessageEvent.ALARM_FLAG_REFRESH:
                if(event.stationId == mStationId){
                    refreshFragment();
                }
                break;
            default:
                break;
        }
    }
}
