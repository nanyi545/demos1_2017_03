package com.webcon.sus.entity;

import android.support.annotation.NonNull;
import android.util.Log;

import java.io.Serializable;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

/**
 * 报警消息指的是雷达的报警信息，不是摄像头的报警
 * @author m
 */
public class AlarmNode implements Serializable, Comparable<AlarmNode>{

    /** 唯一标识符（临时 */
    private int id = -1;
    /** 站场Id便于查找 */
    private int stationId;
    /** 设备ID 暂时没有 */
    private String mDeviceId;
    /** Date格式的时间，用于比较 */
    private Date dAlarmDate;
    /** 备注消息，保留 */
    private String mAlarmInfo;

    /** $报警设备昵称 */
    private String mDeviceName;
    /** $报警日期 */
    private String mAlarmDate;
    /** $报警内容 */
    private String mContent;
    /** $是否已经处理      0：未处理  1：已经处理 */
    private short  isSolved;
    /** $处理者 */
    private String mSolver;
    /** $处理时间 */
    private long mSolvedDate;
    //TODO: 这个格式... 为什么不统一呢！！٩(๑`灬´๑)۶  ##以后记得回来改
    private String mSolvedDateStr;


    private DateFormat sdf;

    public AlarmNode(){
//        id = CommonUtils.getStamp();
        //##NOTE：注意格式
        sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
    }

    /* ----- */
    public void printOut(){
        Log.i("Alarm>>", "device:" + mDeviceName + ", id:" + getId() + ", data:" + mAlarmDate);
    }

    public int getId(){
        if(id == -1){
            initId();
        }
        Log.i("AlarmNode", "id:" + id);
        return id;
    }

    public void initId(){
        if(mAlarmDate != null && mDeviceName != null){
            id = mAlarmDate.hashCode() + mDeviceName.hashCode();
        }
    }

    public int getStationId(){
        return stationId;
    }

    public void setStationId(int stationId){
        this.stationId = stationId;
    }


    public String getDeviceId() {
        return mDeviceId;
    }

    public void setDeviceId(String mDeviceId) {
        this.mDeviceId = mDeviceId;
    }

    public String getDeviceName() {
        return mDeviceName;
    }

    public void setDeviceName(String mDeviceName) {
        this.mDeviceName = mDeviceName;
    }

    public String getAlarmDate(){
        return mAlarmDate;
    }

    public void setAlarmDate(String mDate) {
        if(!"".equals(mDate)){
            try {
                dAlarmDate = sdf.parse(mDate);
            } catch (ParseException e) {
                e.printStackTrace();
            }
        }
        this.mAlarmDate = mDate;
    }

    public Date getFormatDate(){
        return dAlarmDate;
    }

    public String getContent() {
        return mContent;
    }

    public void setContent(String mContent) {
        this.mContent = mContent;
    }

    public String getAlarmInfo() {
        return mAlarmInfo;
    }

    public void setAlarmInfo(String mAlarmInfo) {
        this.mAlarmInfo = mAlarmInfo;
    }

    public short getIsSolved() {
        return isSolved;
    }

    public void setIsSolved(short isSolved) {
        this.isSolved = isSolved;
    }

    public String getSolver() {
        return mSolver;
    }

    public void setSolver(String mSolver) {
        this.mSolver = mSolver;
    }

    public long getSolvedDate() {
        return mSolvedDate;
    }

    public void setSolvedDate(long mSolvedDate) {
        this.mSolvedDate = mSolvedDate;
    }

    public String getSolvedDateStr(){
        return mSolvedDateStr;
    }

    public void setSolvedDateStr(String mSolvedDateStr){
        this.mSolvedDateStr = mSolvedDateStr;
    }

    /* ----------- */

    @Override
    public int compareTo(@NonNull AlarmNode another) {
        if(isSolved > another.getIsSolved()){
            return 1;
        }else if(isSolved < another.getIsSolved()) {
            return -1;
        }else{
            if(dAlarmDate.before(another.getFormatDate())){
                return 1;
            }else if(dAlarmDate.after(another.getFormatDate())){
                return -1;
            }else{
                return 0;
            }
        }
    }

}
